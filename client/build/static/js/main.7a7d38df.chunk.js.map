{"version":3,"sources":["components/CreatePet.jsx","components/Pet.jsx","components/AllPets.jsx","components/EditPet.jsx","components/LikeButton.jsx","components/ShowPet.jsx","App.js","serviceWorker.js","index.js"],"names":["CreatePet","props","useState","name","setName","type","setType","description","setDescription","skillOne","setSkillOne","skillTwo","setSkillTwo","skillThree","setSkillThree","errors","setErrors","className","onSubmit","e","preventDefault","pets","axios","post","then","res","console","log","data","error","navigate","catch","err","onChange","target","value","message","rows","columns","Pet","pet","to","_id","AllPets","setPets","useEffect","get","map","x","key","id","EditPet","skill_one","skill_two","skill_three","put","Like","count","setCount","onClick","ShowPet","setTitle","setPrice","delete","LikeButton","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a7d38df.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\n\n\n\nconst CreatePet = (props) => {\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\")\n    const [skillTwo, setSkillTwo] = useState(\"\")\n    const [skillThree, setSkillThree] = useState(\"\")\n    const [errors, setErrors] = useState({});\n\n    const createNewPet = (e) => {\n        e.preventDefault();\n        const pets = { name, type, description, skillOne, skillTwo, skillThree };\n        axios.post(\"http://localhost:8000/api/pets/new\", pets)\n            .then(res => {\n                console.log(res);\n                if (res.data.error) {\n\n                    setErrors(res.data.error.errors);\n                } else {\n\n                    navigate(\"/\");\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"container bg-mute p-4 border\">\n            <h3>Know a pet needing a new home?</h3>\n            <div className=\"form-group m-4 p-4 bg-light rounded shadow-lg text-dark\">\n                <form onSubmit={createNewPet}>\n                    \n                    <lable className=\"\"><h4>Name</h4></lable>\n                    <input className=\"form-control-lg\" type=\"text\" onChange={e => setName(e.target.value)}></input> {errors.name ? <p className=\"bg text-red\">{errors.name.message}</p> : \"\"}\n                    <lable className=\"text-dark\"><h4>Type</h4></lable>\n                    <input className=\"form-control-lg\" type=\"text\" onChange={e => setType(e.target.value)}></input> {errors.type ? <p className=\"bg text-red\">{errors.type.message}</p> : \"\"}\n                    <lable className=\"\"><h4>Description</h4></lable>\n                    <textarea rows=\"7\" columns=\"50\" className=\"form-control\" type=\"text\" onChange={e => setDescription(e.target.value)} ></textarea>{errors.description ? <p className=\"text-red\">{errors.description.message}</p> : \"\"}<br></br>\n                    <h4 className=\"m-4 p-4\">Skills (Optional)</h4>\n                    \n                    <input className=\"form-control-lg\" type=\"text\" onChange={e => setSkillOne(e.target.value)} value={skillOne}></input> \n                    \n                    <input className=\"form-control-lg\" type=\"text\" onChange={e => setSkillTwo(e.target.value)} value={skillTwo}></input> \n                    \n                    <input className=\"form-control-lg \" type=\"text\" onChange={e => setSkillThree(e.target.value)} value={skillThree}></input><br></br>\n                    <input className=\"btn btn-info shadow m-4 \" type=\"submit\" value=\"Add A Pet\"></input>\n                </form>\n            </div>\n        </div>\n\n    );\n};\n\nexport default CreatePet;","import React from 'react';\nimport { Link } from \"@reach/router\";\n\n\nconst Pet = (props) => {\n\n\n\n    return (\n        \n        <div className=\"card text-dark bg-light m-4 p-4 shadow-lg border \">\n            <h4 className=\"m-4\"><u>Name: {props.pet.name}</u></h4>\n            <h4><u>Type</u></h4>\n            <p>{props.pet.type}</p>\n            <h4><u>Description</u></h4>\n            <p>{props.pet.description}</p>\n            <h4><u>Skills</u></h4>\n            <p>{props.pet.skillOne}</p>\n            <p>{props.pet.skillTwo}</p>\n            <p>{props.pet.skillThree}</p>\n            <Link className=\"btn btn-info m-2 shadow\" to={\"/update/\" + props.pet._id} >Edit</Link>\n            <Link className=\"btn btn-warning m-2 shadow\" to={\"/\" + props.pet._id}>Details</Link>\n        </div>\n        \n\n    );\n\n}\n\nexport default Pet;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Pet from \"./Pet\";\n\nconst AllPets = (props) => {\n\n    const [pets, setPets] = useState([]);\n\n    const fetchPets = () => {\n\n        axios.get(\"http://localhost:8000/api/pets/\")\n            .then(res => {\n                console.log(res);\n                setPets(res.data.pet)\n\n            })\n            .catch(err => console.log(err));\n    }\n\n\n\n    useEffect(() => {\n        fetchPets();\n    }, []);\n\n    return (\n        <div>\n            <div><h4>Welcome to the pet shelter!</h4></div>\n            { pets.map(x => <Pet key={ x.id } pet={ x } /> )}\n        </div>\n    );\n\n}\n\nexport default AllPets;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\n\n\n\n\n\nconst EditPet = (props) => {\n\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState();\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState(\"\");\n    const [skillTwo, setSkillTwo] = useState(\"\");\n    const [skillThree, setSkillThree] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                setName(res.data.pet.name);\n                setType(res.data.pet.type);\n                setDescription(res.data.pet.description);\n                setSkillOne(res.data.pet.skill_one)\n                setSkillTwo(res.data.pet.skill_two)\n                setSkillThree(res.data.pet.skill_three)\n\n                console.log(res);\n            })\n            .catch(err => console.log(err));\n\n    }, []);\n\n\n    const updateExistingPet = (e) => {\n        e.preventDefault();\n        const pets = { name, type, description, skillOne, skillTwo, skillThree };\n        axios.put(`http://localhost:8000/api/pets/update/${props._id}`, pets)\n            .then(res => {\n                console.log(res);\n                if (res.data.error) {\n                    setErrors(res.data.error.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n\n\n    return (\n\n        <div className=\"container bg-mute border p-4\">\n            <h3>Edit {name}</h3>\n            <div className=\"form-group m-4 p-4 bg-light rounded shadow-lg text-dark\">\n\n                <form onSubmit={updateExistingPet}>\n                    <lable className=\"\"><h4>Name</h4></lable>\n                    <input className=\"form-control-lg\" type=\"text\" onChange={e => setName(e.target.value)} value={name}></input> {errors.name ? <p className=\"bg text-red\">{errors.name.message}</p> : \"\"}\n                    <lable className=\"text-dark\"><h4>Type</h4></lable>\n                    <input className=\"form-control-lg\" type=\"text\" onChange={e => setType(e.target.value)} value={type}></input> {errors.type ? <p className=\"bg text-red\">{errors.type.message}</p> : \"\"}\n                    <lable className=\"\"><h4>Description</h4></lable>\n                    <textarea rows=\"7\" columns=\"50\" className=\"form-control\" type=\"text\" onChange={e => setDescription(e.target.value)} value={description}></textarea>{errors.description ? <p className=\"text-red\">{errors.description.message}</p> : \"\"}<br></br>\n                    <h4 className=\"m-4 p-4\">Skills Optional</h4>\n\n                    <input className=\"form-control-lg\" type=\"text\" onChange={e => setSkillOne(e.target.value)} value={skillOne}></input>\n\n                    <input className=\"form-control-lg\" type=\"text\" onChange={e => setSkillTwo(e.target.value)} value={skillTwo}></input>\n\n                    <input className=\"form-control-lg \" type=\"text\" onChange={e => setSkillThree(e.target.value)} value={skillThree}></input><br></br>\n                    <input className=\"btn btn-info shadow m-4 \" type=\"submit\" value=\"Make Changes\"></input>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default EditPet;","import React, { useState } from 'react';\n\nfunction Like() {\n\n    const [count, setCount] = useState(0);\n\n    return (\n        <div>\n            <button className=\"btn shadow m-4 bg-success text-light\" onClick={() => setCount(count + 1)}>Likes {count}</button>\n        </div>\n    );\n}\n\nexport default Like;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { navigate } from '@reach/router';\nimport LikeButton from './LikeButton';\n\n\n\n\n\nconst ShowPet = (props) => {\n\n    const [name, setTitle] = useState(\"\");\n    const [type, setPrice] = useState();\n    const [description, setDescription] = useState(\"\");\n    const [skillOne, setSkillOne] = useState();\n    const [skillTwo, setSkillTwo] = useState();\n    const [skillThree, setSkillThree] = useState();\n    const [errors, setErrors] = useState({});\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then(res => {\n                setTitle(res.data.pet.name);\n                setPrice(res.data.pet.type);\n                setDescription(res.data.pet.description);\n                setSkillOne(res.data.pet.skill_one)\n                setSkillTwo(res.data.pet.skill_two)\n                setSkillThree(res.data.pet.skill_three)\n                console.log(res);\n            })\n            .catch(err => console.log(err));\n\n    }, []);\n\n\n    const deletePet = (e) => {\n        e.preventDefault();\n        axios.delete(`http://localhost:8000/api/pets/delete/${props._id}`)\n            .then(res => {\n                console.log(res);\n                if (res.data.error) {\n                    setErrors(res.data.error.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            })\n            .catch(err => console.log(err));\n\n    }\n\n\n\n\n\n    return (\n        <div className=\"Card text-dark bg-light rounded m-4 p-4 shadow-lg\">\n            <div>\n            <h4><u>Name : {name}</u></h4>\n            <h4>Type</h4>\n            <p>{type}</p>\n            <p>{description}</p>\n            <h4>Description</h4>\n            <h4 className=\"m-4\">Skills</h4>\n            <p>{skillOne}</p>\n            <p>{skillTwo}</p>\n            <p>{skillThree}</p>\n            <button className=\"btn-lg btn-outline-dark text-danger m-4 p-4 shadow-lg\" onClick={deletePet} value={name}>Adot {name}</button>\n        </div>\n        <div>\n            <LikeButton />\n        </div>\n        </div>\n\n            );\n        }\n\nexport default ShowPet;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Router, Link } from \"@reach/router\";\nimport './App.css';\nimport CreatePet from './components/CreatePet';\nimport AllPets from './components/AllPets';\nimport EditPet from './components/EditPet';\nimport ShowPet from './components/ShowPet';\n\nfunction App() {\n  return (\n    <div className=\"App container p-4 bg-secondary text-light\">\n      <div>\n        <h1>Pet Shelter</h1>\n      </div>\n      <nav>\n        <Link to=\"/\"><button className=\"btn shadow btn-outline-light m-4\">Home</button></Link>\n        <Link to=\"/new\"><button className=\"btn shadow btn-outline-light m-4\">Add A Pet To The Shelter</button></Link>\n      </nav>\n      <Router>\n        <AllPets path=\"/\" />\n        <CreatePet path=\"/new\" />\n        <EditPet path=\"update/:_id\" />\n        <ShowPet path=\"/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}